[General]
ned-path = .;../queueinglib
#debug-on-errors = true
#record-eventlog = true
#**.vector-record-eventnumbers = false

[Config OneFifo]
description = "a single queue"
network = SimpleQueue
**.numJobs = 100
**.serviceTime = exponential(4s)
**.capacity = 5
**.interArrivalTime = exponential(2s)

[Config TandemFifos]
description = "several queues"
network = TandemQueue
**.interArrivalTime = exponential(2s)
**.serviceTime = exponential(2s)

[Config SmallCQN]
description = "two queues in a closed queueing network"
network = SmallCQN
**.queue1.serviceTime = 1s
**.queue2.serviceTime = exponential(1s)

[Config Ring]
description = "a server ring"
network = RingQueue
**.source.numJobs = 15
**.source.interArrivalTime = 0
**.source1.interArrivalTime = exponential(2s)
**.source1.startTime = 20s
**.source1.numJobs = 25
**.serviceTime = exponential(2s)

[Config Terminal]
description = "flight terminal"
network = Terminal
**.stopTime = 3600s
**.interArrivalTime = exponential(55s)
**.jobType = intuniform(0,3)
**.arrival.jobName = "passenger"
**.delay = exponential(30s)
**.serviceTime = exponential(60s)
**.fetchingAlgorithm = "priority"

[Config CallCenter]
description = "call center"
network = CallCenter
**.interArrivalTime = exponential(15s)
**.serviceTime = exponential(40s)
**.delay = 5s
**.jobType = intuniform(0,3)
**.incomingCall.jobName = "call"
**.sendingAlgorithm = "priority"
**.fetchingAlgorithm = "shortestQueue"
**.randomGateIndex = (intuniform(0, 9) == 0) ? 1 : 0

[Config ForkJoin]
description = "splitting jobs and joining them again"
network = ForkJoin
**.interArrivalTime = 10s
**.delay = exponential(10s)

[Config ResourceAllocation]
description = "two queues depending on a single resource"
network = ResourceAllocation
**.interArrivalTime = 2s
**.serviceTime = 1s
**.resourceModuleName = "resource"
**.resource.amount = 1
**.jobPriority = uniform(0, 5)
**.resourcePriority = uniform(0, 5)

[Config AllocDealloc]
network = AllocDealloc
**.interArrivalTime = exponential(1s)
**.resourceModuleName = "resourcePool"
**.delay = exponential(0.6s)
**.resourcePool.amount = 2


